#! /usr/bin/env node
"use strict"; function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var _fsextra = require('fs-extra'); var _fsextra2 = _interopRequireDefault(_fsextra);var _path = require('path'); var _path2 = _interopRequireDefault(_path);var _prompts = require('prompts'); var _prompts2 = _interopRequireDefault(_prompts);var _consolelogcolor = require('console-log-color'); var _consolelogcolor2 = _interopRequireDefault(_consolelogcolor);var p=[{title:"React",value:"react"}];async function g(){let r=await _prompts2.default.call(void 0, [{name:"projectName",type:"text",message:"Project name",initial:"skull"},{name:"framework",type:"select",message:"Select a framework",choices:p.map(l=>l)}]),{projectName:a,framework:m}=r,c=`${m}`,n=_path2.default.join(__dirname,"..","templates",c);_fsextra2.default.existsSync(n)||(console.error(_consolelogcolor2.default.red(`Template ${c} at ${n} not found!`)),process.exit(1));let e=_path2.default.resolve(process.cwd(),a);console.log(),console.log(`Scaffolding app at ${_consolelogcolor2.default.gray(e)}`),console.log(),_fsextra2.default.copySync(n,e),_fsextra2.default.moveSync(_path2.default.join(e,"_gitignore"),_path2.default.join(e,".gitignore")),_fsextra2.default.moveSync(_path2.default.join(e,"env.example"),_path2.default.join(e,".env")),console.log("\u2714 Done! You can start with:"),console.log(`1. cd ${a}`),console.log("2. npm install"),console.log("3. npm run dev")}g();
